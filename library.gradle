apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group = packgra.group

android {
    compileSdkVersion packgra.compileSdkVersion
    buildToolsVersion packgra.buildToolsVersion

    defaultConfig {
        minSdkVersion packgra.minSdkVersion
        targetSdkVersion packgra.targetSdkVersion
        versionCode packgra.versionCode
        versionName packgra.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile packgra.junit
    androidTestCompile(packgra.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}